// <auto-generated />
using System;
using EF_Book_DataApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF_Book_DataApp.Migrations
{
    [DbContext(typeof(EFDatabaseContext))]
    [Migration("20210424140837_PromoteSuppliers")]
    partial class PromoteSuppliers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF_Book_DataApp.Models.ContactDetails", b =>
                {
                    b.Property<long>("ContactDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("LocationContactLocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactDetailsId");

                    b.HasIndex("LocationContactLocationId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("EF_Book_DataApp.Models.ContactLocation", b =>
                {
                    b.Property<long>("ContactLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactLocationId");

                    b.ToTable("ContactLocation");
                });

            modelBuilder.Entity("EF_Book_DataApp.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EF_Book_DataApp.Models.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ContactDetailsId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.HasIndex("ContactDetailsId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("EF_Book_DataApp.Models.ContactDetails", b =>
                {
                    b.HasOne("EF_Book_DataApp.Models.ContactLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationContactLocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EF_Book_DataApp.Models.Product", b =>
                {
                    b.HasOne("EF_Book_DataApp.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("EF_Book_DataApp.Models.Supplier", b =>
                {
                    b.HasOne("EF_Book_DataApp.Models.ContactDetails", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactDetailsId");

                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
